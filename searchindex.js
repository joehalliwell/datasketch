Search.setIndex({"docnames": ["documentation", "hyperloglog", "index", "lsh", "lshensemble", "lshforest", "minhash", "weightedminhash"], "filenames": ["documentation.rst", "hyperloglog.rst", "index.rst", "lsh.rst", "lshensemble.rst", "lshforest.rst", "minhash.rst", "weightedminhash.rst"], "titles": ["API Documentation", "HyperLogLog", "datasketch: Big Data Looks Small", "MinHash LSH", "MinHash LSH Ensemble", "MinHash LSH Forest", "MinHash", "Weighted MinHash"], "terms": {"class": [0, 3], "datasketch": [0, 1, 3, 4, 5, 6, 7], "num_perm": [0, 3, 4, 5, 6], "128": [0, 3, 4, 5, 6], "seed": [0, 3, 7], "1": [0, 2, 3, 4, 5, 7], "hashfunc": [0, 6], "function": [0, 1, 3, 5, 7], "sha1_hash32": 0, "hashobj": 0, "none": 0, "hashvalu": 0, "permut": [0, 3, 6, 7], "sourc": [0, 3, 4], "i": [0, 1, 3, 4, 5, 6, 7], "probabilist": [0, 1, 2, 3, 5, 6], "data": [0, 1, 3, 4, 5, 6, 7], "structur": [0, 1, 2, 3, 5, 6], "comput": [0, 3, 4, 5, 6], "jaccard": [0, 2, 3, 4, 5, 6, 7], "similar": [0, 2, 3, 4, 5, 6, 7], "between": [0, 3, 4, 5, 6], "set": [0, 1, 3, 4, 5, 6, 7], "paramet": [0, 1, 3, 4, 5, 6, 7], "int": [0, 5], "option": [0, 3, 4, 5], "number": [0, 1, 3, 4, 5, 6, 7], "random": [0, 3, 7], "It": [0, 3, 4, 6, 7], "ignor": 0, "The": [0, 1, 2, 3, 4, 5, 6], "control": [0, 1], "gener": [0, 3, 5], "thi": [0, 1, 2, 3, 4, 5, 6, 7], "hash": [0, 1, 3], "us": [0, 1, 2, 3, 4, 5, 7], "take": [0, 4, 5, 7], "input": 0, "pass": [0, 1, 3], "updat": [0, 1, 3, 4, 5, 6, 7], "method": [0, 5], "return": [0, 1, 3, 5, 6], "an": [0, 1, 3, 4, 6], "integ": [0, 6], "can": [0, 1, 2, 3, 4, 5, 6, 7], "encod": [0, 1, 3, 4, 5, 6], "32": [0, 1, 4, 6], "bit": [0, 1, 6], "default": [0, 1, 5, 6, 7], "base": [0, 1, 3, 4], "sha1": [0, 6], "from": [0, 1, 3, 4, 5, 6, 7], "hashlib": [0, 6], "deprec": 0, "argument": [0, 3, 5, 7], "sinc": [0, 3, 4], "version": [0, 1, 3, 4], "4": [0, 3, 7], "0": [0, 3, 4, 7], "op": 0, "ha": [0, 3], "been": 0, "replac": 0, "numpi": [0, 2, 7], "arrai": 0, "list": [0, 3], "valu": [0, 1, 4, 6], "intern": 0, "state": 0, "specifi": [0, 3, 7], "faster": 0, "initi": [0, 1, 3], "exist": 0, "anoth": [0, 4, 5], "To": [0, 2, 3], "save": [0, 3], "memori": [0, 1, 5, 6], "usag": [0, 1, 2, 3, 6, 7], "consid": [0, 6], "leanminhash": [0, 6], "onli": [0, 7], "support": [0, 2, 3, 7], "serial": [0, 3], "pickl": [0, 3], "deseri": [0, 3], "ar": [0, 2, 3, 4, 5, 6, 7], "remov": [0, 3], "instead": [0, 1, 4, 5, 6], "befor": 0, "cannot": [0, 3, 7], "properli": 0, "newer": 0, "need": [0, 3, 6], "migrat": 0, "3": [0, 3, 7], "": [0, 3, 5, 6], "python": [0, 2, 3, 6], "built": [0, 6], "packag": [0, 2, 3, 4], "chang": [0, 1, 3, 6], "make": [0, 1, 3, 5, 6, 7], "consist": 0, "across": [0, 3], "differ": [0, 3, 4, 5], "side": 0, "effect": 0, "now": [0, 3], "creat": [0, 1, 3, 4, 5, 7], "won": [0, 5], "t": [0, 3, 5], "work": [0, 4, 5], "e": [0, 3, 4, 5, 6], "merg": [0, 1, 6], "union": [0, 1, 4, 6], "those": 0, "after": [0, 5], "__init__": 0, "b": [0, 3], "new": [0, 3, 6], "constructor": [0, 3, 6], "exampl": [0, 3, 5, 7], "string": [0, 3], "which": [0, 3, 4, 5, 7], "requir": [0, 3, 7], "byte": 0, "utf": [0, 3], "8": [0, 1, 3, 4, 5, 7], "we": [0, 3, 4, 6], "also": [0, 1, 2, 3, 4, 5, 6, 7], "pyfarmhash": 0, "import": [0, 1, 3, 4, 5, 6, 7], "farmhash": [0, 6], "def": [0, 3, 6], "_hash_32": 0, "hash32": [0, 6], "update_batch": 0, "token1": 0, "token2": 0, "other": [0, 3, 4], "estim": [0, 1, 2, 3, 5, 6, 7], "resembl": [0, 4, 6], "repres": 0, "type": [0, 2, 3, 5, 7], "float": [0, 6], "count": [0, 1, 6, 7], "cardin": [0, 1, 2, 3, 6], "techniqu": 0, "describ": 0, "paper": [0, 1, 5, 6], "one": [0, 4], "both": [0, 6], "digest": 0, "export": 0, "is_empti": 0, "If": [0, 3, 5, 6], "current": [0, 3], "empti": 0, "just": [0, 3, 4], "bool": 0, "clear": [0, 4], "all": [0, 1, 3, 5, 6, 7], "reset": 0, "copi": 0, "A": [0, 1, 3], "its": [0, 4, 7], "__len__": 0, "__eq__": 0, "equal": 0, "two": [0, 1, 3, 4, 6], "equival": 0, "classmethod": 0, "mh": 0, "object": [0, 1, 3, 4, 5, 6, 7], "unit": 0, "length": 0, "variabl": 0, "must": [0, 2, 3, 5], "least": 0, "2": [0, 2, 5, 7], "__hash__": 0, "__weakref__": 0, "weak": 0, "refer": [0, 5], "defin": [0, 6], "bulk": [0, 3], "minhash_kwarg": 0, "avoid": 0, "unnecessari": 0, "overhead": 0, "when": [0, 3, 4, 5, 6, 7], "mani": [0, 1, 3, 5], "reus": 0, "iter": [0, 3, 4], "each": [0, 7], "output": [0, 6], "keyword": 0, "token3": 0, "token4": 0, "token5": 0, "token6": 0, "64": [0, 1], "do": [0, 3, 5, 7], "someth": 0, "smaller": [0, 4], "footprint": [0, 6], "frozen": 0, "inherit": 0, "doe": [0, 3, 4, 7], "store": [0, 3, 5, 6], "further": 0, "convert": 0, "lean_minhash": 0, "you": [0, 1, 2, 3, 4, 5, 6, 7], "lean_minhash2": 0, "Or": 0, "minhash2": 0, "want": [0, 3, 4, 5], "prevent": 0, "affect": 0, "minhashlsh": [0, 3, 5, 7], "minhashlshforest": [0, 5, 7], "minhashlshensembl": [0, 4], "togeth": 0, "inititi": 0, "avail": [0, 6], "call": [0, 3, 4, 5], "rais": 0, "typeerror": 0, "bytes": 0, "byteord": 0, "size": [0, 3, 4, 6], "str": 0, "order": 0, "charact": 0, "nativ": 0, "buf": 0, "result": [0, 3, 4, 5, 6, 7], "alloc": 0, "buffer": 0, "implement": [0, 1, 4, 5, 7], "interfac": [0, 1, 3, 5, 7], "One": 0, "bytearrai": 0, "prefer": 0, "over": 0, "program": 0, "languag": 0, "schema": 0, "first": [0, 1, 3, 7], "next": 0, "rest": [0, 3], "singl": [0, 1, 3], "multipl": [0, 3, 5], "assum": [0, 7], "same": [0, 1, 3, 4, 5], "len": [0, 1, 3, 4, 6, 7], "enumer": 0, "__getstate__": 0, "helper": 0, "self": 0, "lmh": 0, "weightedminhashgener": [0, 7], "dim": 0, "sample_s": [0, 7], "weightedminhash": [0, 7], "sergei": [0, 7], "ioff": [0, 7], "improv": [0, 3], "sampl": [0, 7], "l1": 0, "sketch": [0, 2, 4, 5], "dimens": [0, 7], "vector": [0, 7], "v": [0, 3], "given": [0, 4], "frequenc": 0, "correspond": 0, "element": [0, 6], "multi": 0, "minhash_mani": 0, "x": [0, 4, 5], "spmatrix": 0, "ndarrai": 0, "instanc": 0, "matrix": 0, "In": [0, 3, 7], "row": 0, "column": 0, "sp": 0, "spars": [0, 1], "np": [0, 7], "shape": 0, "either": [0, 3], "origin": [0, 1, 5, 6], "threshold": [0, 2, 3, 4, 5, 7], "9": [0, 7], "5": [0, 3, 7], "param": [0, 3], "storage_config": [0, 3], "prepickl": 0, "index": [0, 2, 3, 4, 5, 7], "queri": [0, 2, 3, 4, 5, 7], "chapter": [0, 3], "mine": [0, 3], "massiv": [0, 3], "dataset": [0, 1, 3, 5, 6], "optim": [0, 3], "miniz": 0, "fals": [0, 3], "posit": [0, 3], "neg": [0, 3], "For": [0, 2, 3, 5], "tupl": [0, 3], "adjust": [0, 6], "rel": 0, "minim": 0, "format": 0, "false_positive_weight": 0, "false_negative_weight": 0, "band": 0, "bypass": 0, "step": 0, "dict": 0, "storag": [0, 2, 3], "servic": [0, 3], "hashtabl": 0, "kei": [0, 3, 4, 5], "basenam": [0, 3], "properti": [0, 3], "whose": 0, "prefix": [0, 3, 5], "respons": 0, "ensur": 0, "collis": [0, 3], "true": [0, 3, 5], "insert": [0, 3, 7], "chosen": 0, "provid": [0, 2, 3], "compress": [0, 7], "reduc": [0, 3, 6], "could": 0, "caus": 0, "higher": [0, 1, 3, 6], "rate": 0, "sum": 0, "maintain": 0, "high": [0, 3, 6], "recal": [0, 3], "more": [0, 1, 3, 5, 6], "assign": 0, "toward": 0, "6": [0, 3, 7], "try": 0, "live": 0, "small": [0, 1, 6], "check_dupl": [0, 3], "referenc": [0, 5], "identifi": [0, 3], "duplic": [0, 3, 4], "recommend": [0, 3], "dure": [0, 3], "insertion_sess": [0, 3], "buffer_s": 0, "50000": 0, "context": [0, 3], "manag": [0, 3], "fast": [0, 2], "insert_sess": 0, "mode": [0, 3], "minhashlshinsertionsess": 0, "give": [0, 1, 2, 3, 6], "retriev": [0, 5], "greater": 0, "than": [0, 1, 3, 6], "uniqu": [0, 3], "add_to_query_buff": 0, "execut": 0, "collect_query_buff": 0, "combin": [0, 3], "wai": [0, 3, 4, 5], "cassandra": [0, 2, 3], "backend": 0, "shared_buff": 0, "were": 0, "ad": [0, 5], "intersect": [0, 3, 4, 6], "__contains__": 0, "hashabl": 0, "check": [0, 4, 5], "get_count": 0, "under": [0, 3], "bucket": 0, "get_subset_count": 0, "see": [0, 2, 3, 4, 5, 6], "abov": [0, 2, 3, 4], "restrict": 0, "get": [0, 3, 4, 7], "l": [0, 5], "top": [0, 2, 3, 5], "k": [0, 2, 3, 5], "tree": [0, 5], "sort": [0, 5], "everi": [0, 3, 5, 6], "tabl": [0, 3], "without": [0, 5], "modif": 0, "add": [0, 5], "searchbal": 0, "until": 0, "so": [0, 1, 3, 4, 5, 6, 7], "far": [0, 6], "them": [0, 3, 5], "searchabl": [0, 5], "approxim": [0, 3, 5, 7], "have": [0, 3, 4, 5, 6, 7], "highest": [0, 5], "maximum": [0, 5], "most": 0, "tip": 0, "accuraci": [0, 1, 2, 3, 4, 6, 7], "g": [0, 3, 5], "exact": [0, 3, 5], "final": [0, 5], "often": [0, 5], "post": [0, 5], "process": [0, 2, 3, 5, 7], "becaus": [0, 4, 5, 6], "total": [0, 5], "still": [0, 3, 5], "bound": [0, 5], "constant": [0, 4, 5], "perform": [0, 4, 5, 6, 7], "degrad": [0, 5], "too": [0, 5], "much": [0, 3, 4, 5], "howev": [0, 1, 3, 4, 5, 7], "keep": [0, 5], "around": [0, 5], "some": [0, 5, 6], "where": [0, 3], "whether": 0, "ani": [0, 3], "note": [0, 2, 3], "num_part": [0, 4], "16": [0, 3], "m": [0, 3, 6], "contain": [0, 2], "zhu": [0, 4], "et": [0, 4, 5], "al": [0, 4, 5], "partit": [0, 4], "factor": 0, "time": [0, 2, 3, 4, 6], "space": [0, 1, 6], "better": [0, 1, 4, 6, 7], "lead": 0, "expens": [0, 7], "slower": [0, 6, 7], "go": [0, 4], "AND": 0, "due": [0, 3], "parallel": [0, 6], "inform": 0, "about": [0, 3, 4], "found": [0, 3, 4], "name": [0, 3], "maxk": 0, "entri": 0, "onc": 0, "form": 0, "item": [0, 7], "respect": [0, 3, 4, 7], "p": [0, 1], "reg": 0, "veri": [0, 2, 3, 4, 5, 7], "larg": [0, 2, 3, 4, 7], "here": [0, 1, 4, 5, 6, 7], "http": [0, 3], "github": [0, 4], "com": [0, 3, 4], "svpcom": 0, "precis": [0, 3, 4, 5], "hll": 0, "seen": [0, 6], "hyperloglogplusplu": [0, 1], "sha1_hash64": 0, "enhanc": [0, 1], "googl": [0, 1], "main": 0, "scheme": [0, 1], "represent": [0, 1], "capabl": 1, "distinct": [1, 6], "fix": [1, 4, 5, 6], "introduc": [1, 6], "philipp": 1, "flajolet": 1, "\u00e9ric": 1, "fusi": 1, "olivi": 1, "gandouet": 1, "fr\u00e9d\u00e9ric": 1, "meunier": 1, "data1": [1, 5, 6], "h": 1, "d": [1, 3, 4, 5, 6], "utf8": [1, 3, 4, 5, 6], "print": [1, 3, 4, 5, 6, 7], "s1": [1, 6], "actual": [1, 6], "As": [1, 7], "minhash": [1, 2], "12": [1, 7], "interestingli": 1, "speed": [1, 6, 7], "penalti": 1, "exponenti": 1, "h1": 1, "h2": 1, "test": [1, 6], "follow": [1, 2, 3, 4], "stabl": 1, "bia": 1, "correct": 1, "experi": [1, 3, 4], "share": [1, 3], "hpp": 1, "everyth": [1, 3], "els": 1, "search": [2, 3, 4], "amount": 2, "super": 2, "littl": 2, "loss": 2, "weight": 2, "hyperloglog": 2, "sub": [2, 3], "linear": [2, 3, 5, 6], "lsh": [2, 7], "forest": [2, 3], "ensembl": [2, 3], "7": [2, 7], "11": 2, "scipi": 2, "redi": [2, 3], "layer": [2, 3], "scale": 2, "pip": 2, "depend": [2, 5, 7], "suppos": [3, 4], "collect": [3, 4], "find": [3, 4], "your": [3, 4, 5, 6], "certain": [3, 4], "effici": 3, "come": 3, "satisfi": 3, "said": 3, "approach": [3, 7], "o": 3, "n": 3, "algorithm": 3, "mean": [3, 5, 6], "cost": [3, 7], "increas": [3, 4, 7], "linearli": [3, 6, 7], "popular": [3, 6], "altern": 3, "local": 3, "sensit": 3, "achiev": [3, 4], "huge": 3, "detail": [3, 4, 5], "includ": [3, 5], "classic": 3, "There": [3, 4, 5], "qualifi": 3, "assur": 3, "alwai": 3, "probabl": [3, 5, 6], "lower": 3, "moreov": 3, "jump": 3, "right": [3, 4], "like": [3, 4], "set1": [3, 4], "set2": [3, 4], "document": [3, 4, 5, 6], "set3": [3, 4], "m1": [3, 4, 5, 6, 7], "m2": [3, 4, 5, 6, 7], "m3": [3, 4, 5, 7], "neighbour": [3, 7], "bigger": 3, "20": 3, "group": 3, "averag": [3, 5], "193": 3, "shingl": 3, "90": 3, "percentil": 3, "plot": [3, 4, 5], "below": [3, 4, 5], "benchmark": [3, 4, 5, 6], "directori": [3, 4], "code": [3, 4, 6], "repositori": [3, 4], "tune": [3, 4], "addit": 3, "mai": [3, 5], "best": 3, "measur": [3, 4], "intent": 3, "handl": [3, 6], "persist": 3, "part": 3, "product": 3, "environ": 3, "configur": 3, "host": 3, "localhost": 3, "port": 3, "6379": 3, "sequenc": 3, "advis": 3, "session": 3, "network": 3, "data_list": 3, "open": 3, "inconsist": 3, "cluster": 3, "long": [3, 7], "term": 3, "address": 3, "case": [3, 4, 5], "applic": 3, "continu": 3, "increment": 3, "127": 3, "keyspac": 3, "lsh_test": 3, "replic": 3, "simplestrategi": 3, "replication_factor": 3, "drop_keyspac": 3, "drop_tabl": 3, "node": 3, "contact": 3, "alreadi": 3, "forc": 3, "creation": 3, "thu": [3, 4, 7], "drop": 3, "ones": 3, "counterpart": 3, "extern": 3, "ther": 3, "serializ": 3, "dump": 3, "fork": 3, "simpli": 3, "load": 3, "allow": 3, "preserv": 3, "know": 3, "variou": 3, "locat": 3, "config": 3, "unique_name_6ac4fg": 3, "threashold": 3, "unique_nam": 3, "associ": 3, "underli": 3, "old": 3, "don": 3, "extrem": 3, "unlik": 3, "modul": 3, "experiment": 3, "slightli": [3, 4], "futur": 3, "million": [3, 5], "text": 3, "stream": [3, 6, 7], "batch": 3, "api": 3, "aiohttp": 3, "task": 3, "maxim": 3, "throughput": 3, "mongodb": 3, "motor": 3, "usual": [3, 7], "aio": 3, "asyncminhashlsh": 3, "_storag": 3, "aiomongo": 3, "mongo": 3, "27017": 3, "db": 3, "async": 3, "func": 3, "await": 3, "close": 3, "style": [3, 6], "replica": 3, "three": 3, "replica_set": 3, "rs0": 3, "replica_set_nod": 3, "node1": 3, "port1": 3, "node2": 3, "port2": 3, "node3": 3, "port3": 3, "cloud": 3, "atla": 3, "arbitrari": [3, 4, 6], "uri": 3, "url": 3, "srv": 3, "user": 3, "server": 3, "ybq4y": 3, "net": 3, "client": 3, "pymongo": 3, "mongo_cli": 3, "html": 3, "put": 3, "arg": 3, "x509": 3, "authent": 3, "ssl": 3, "ssl_ca_cert": 3, "root": 3, "ca": 3, "pem": 3, "ssl_pem_passphras": 3, "password": 3, "ssl_certfil": 3, "certfil": 3, "authmechan": 3, "usernam": 3, "chunk": 3, "lambda": [3, 5], "islic": 3, "_chunked_str": 3, "choic": 3, "ascii_lowercas": 3, "_": 3, "rang": 3, "10000": 3, "seq": 3, "frozenset": 3, "chain": 3, "join": 3, "aahhb": 3, "aahh": 3, "aahhc": 3, "aac": 3, "kld": 3, "bhg": 3, "kkd": 3, "yow": 3, "ppi": 3, "eer": 3, "obj": 3, "zip": 3, "batch_siz": 3, "1000": [3, 7], "f": 3, "asyncio": 3, "gather": 3, "delete_sess": 3, "keys_to_remov": 3, "aioredi": 3, "directli": [3, 4], "custom": [3, 5, 6], "yourself": 3, "how": [3, 4], "pair": [3, 4], "speedup": 3, "hundr": 3, "point": 3, "euclidean": 3, "l2": 3, "distanc": 3, "great": 4, "bias": 4, "illustr": 4, "venn": 4, "diagram": 4, "left": 4, "q": 4, "roughli": 4, "But": 4, "frac": 4, "cap": 4, "cup": 4, "latter": 4, "being": 4, "larger": 4, "show": [4, 5], "penal": 4, "divid": 4, "soon": 4, "becom": 4, "why": 4, "denomin": 4, "think": 4, "problem": 4, "specif": 4, "sole": 4, "determin": 4, "easili": 4, "deduc": 4, "multipli": 4, "normal": 4, "fraction": 4, "simplifi": 4, "full": 4, "ekzhu": 4, "lshensembl": 4, "cat": 4, "dog": 4, "fish": 4, "cow": 4, "pig": 4, "eleph": 4, "lion": 4, "tiger": 4, "wolf": 4, "bird": 4, "human": 4, "car": 4, "van": 4, "train": 4, "plane": 4, "ship": 4, "submarin": 4, "rocket": 4, "bike": 4, "scooter": 4, "motorcyl": 4, "suv": 4, "jet": 4, "hors": 4, "membership": [4, 5], "radiu": 5, "bawa": 5, "possibl": [5, 7], "match": 5, "incorrect": 5, "data2": [5, 6], "data3": 5, "otherwis": 5, "higest": 5, "candid": 5, "map": 5, "scan": 5, "synthet": 5, "wa": 5, "read": 5, "understand": 5, "depth": 5, "coher": 5, "250": 5, "10": [5, 7], "good": 5, "enough": 5, "our": 5, "let": [5, 6], "sai": 5, "dictionari": 5, "idea": 5, "compute_jaccard": 5, "index_set": 5, "query_set": 5, "Then": 5, "revers": 5, "somewher": 5, "databas": 5, "etc": 5, "unexpect": 5, "No": 5, "andrei": 6, "z": 6, "broder": 6, "s2": 6, "actual_jaccard": 6, "256": [6, 7], "trade": 6, "off": 6, "cpu": 6, "instruct": 6, "proport": 6, "mapreduc": 6, "analysi": 6, "present": 6, "cohen": 6, "1994": 6, "billion": 6, "funciton": 6, "librari": [6, 7], "murmurhash3": 6, "mmh3": 6, "_hash_func": 6, "minhash_benchmark": 6, "py": 6, "run": 6, "xxhash": 6, "error": 6, "lot": 6, "inclus": 6, "exclus": 6, "principl": 6, "later": 6, "unweight": 7, "binari": 7, "modifi": 7, "multiset": 7, "expand": 7, "real": 7, "univers": 7, "known": 7, "unsuit": 7, "knowledg": 7, "unseen": 7, "wmg": 7, "512": 7, "v1": 7, "v2": 7, "wm1": 7, "wm2": 7, "profil": 7, "uniform": 7, "v3": 7, "mg": 7}, "objects": {"datasketch": [[0, 0, 1, "", "HyperLogLog"], [0, 0, 1, "", "HyperLogLogPlusPlus"], [0, 0, 1, "", "LeanMinHash"], [0, 0, 1, "", "MinHash"], [0, 0, 1, "", "MinHashLSH"], [0, 0, 1, "", "MinHashLSHEnsemble"], [0, 0, 1, "", "MinHashLSHForest"], [0, 0, 1, "", "WeightedMinHash"], [0, 0, 1, "", "WeightedMinHashGenerator"]], "datasketch.HyperLogLog": [[0, 1, 1, "", "__eq__"], [0, 1, 1, "", "__getstate__"], [0, 2, 1, "", "__hash__"], [0, 1, 1, "", "__init__"], [0, 1, 1, "", "__len__"], [0, 1, 1, "", "clear"], [0, 1, 1, "", "copy"], [0, 1, 1, "", "count"], [0, 1, 1, "", "digest"], [0, 1, 1, "", "is_empty"], [0, 1, 1, "", "merge"], [0, 1, 1, "", "update"]], "datasketch.HyperLogLogPlusPlus": [[0, 1, 1, "", "__init__"], [0, 2, 1, "", "__weakref__"], [0, 1, 1, "", "count"]], "datasketch.LeanMinHash": [[0, 1, 1, "", "__getstate__"], [0, 1, 1, "", "__hash__"], [0, 1, 1, "", "__init__"], [0, 1, 1, "", "bytesize"], [0, 1, 1, "", "copy"], [0, 1, 1, "", "deserialize"], [0, 1, 1, "", "serialize"], [0, 1, 1, "", "union"], [0, 1, 1, "", "update"]], "datasketch.MinHash": [[0, 1, 1, "", "__eq__"], [0, 2, 1, "", "__hash__"], [0, 1, 1, "", "__init__"], [0, 1, 1, "", "__len__"], [0, 2, 1, "", "__weakref__"], [0, 1, 1, "", "bulk"], [0, 1, 1, "", "clear"], [0, 1, 1, "", "copy"], [0, 1, 1, "", "count"], [0, 1, 1, "", "digest"], [0, 1, 1, "", "generator"], [0, 1, 1, "", "is_empty"], [0, 1, 1, "", "jaccard"], [0, 1, 1, "", "merge"], [0, 1, 1, "", "union"], [0, 1, 1, "", "update"], [0, 1, 1, "", "update_batch"]], "datasketch.MinHashLSH": [[0, 1, 1, "", "__contains__"], [0, 1, 1, "", "__init__"], [0, 2, 1, "", "__weakref__"], [0, 1, 1, "", "add_to_query_buffer"], [0, 1, 1, "", "collect_query_buffer"], [0, 1, 1, "", "get_counts"], [0, 1, 1, "", "get_subset_counts"], [0, 1, 1, "", "insert"], [0, 1, 1, "", "insertion_session"], [0, 1, 1, "", "is_empty"], [0, 1, 1, "", "query"], [0, 1, 1, "", "remove"]], "datasketch.MinHashLSHEnsemble": [[0, 1, 1, "", "__contains__"], [0, 1, 1, "", "__init__"], [0, 2, 1, "", "__weakref__"], [0, 1, 1, "", "index"], [0, 1, 1, "", "is_empty"], [0, 1, 1, "", "query"]], "datasketch.MinHashLSHForest": [[0, 1, 1, "", "__contains__"], [0, 1, 1, "", "__init__"], [0, 2, 1, "", "__weakref__"], [0, 1, 1, "", "add"], [0, 1, 1, "", "index"], [0, 1, 1, "", "is_empty"], [0, 1, 1, "", "query"]], "datasketch.WeightedMinHash": [[0, 1, 1, "", "__eq__"], [0, 2, 1, "", "__hash__"], [0, 1, 1, "", "__init__"], [0, 1, 1, "", "__len__"], [0, 2, 1, "", "__weakref__"], [0, 1, 1, "", "copy"], [0, 1, 1, "", "digest"], [0, 1, 1, "", "jaccard"]], "datasketch.WeightedMinHashGenerator": [[0, 1, 1, "", "__init__"], [0, 2, 1, "", "__weakref__"], [0, 1, 1, "", "minhash"], [0, 1, 1, "", "minhash_many"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": 0, "document": 0, "minhash": [0, 3, 4, 5, 6, 7], "lean": 0, "weight": [0, 7], "lsh": [0, 3, 4, 5], "asynchron": [0, 3], "forest": [0, 5], "ensembl": [0, 4], "hyperloglog": [0, 1], "datasketch": 2, "big": 2, "data": 2, "look": 2, "small": 2, "instal": 2, "scale": 3, "connect": 3, "exist": 3, "common": [3, 4, 5, 6], "issu": [3, 4, 5, 6], "contain": 4, "tip": 5, "improv": 5, "accuraci": 5, "us": 6, "differ": 6, "hash": 6, "function": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "MinHash": [[0, "minhash"], [6, "minhash"]], "Lean MinHash": [[0, "lean-minhash"]], "Weighted MinHash": [[0, "weighted-minhash"], [7, "weighted-minhash"]], "MinHash LSH": [[0, "minhash-lsh"], [3, "minhash-lsh"]], "Asynchronous MinHash LSH": [[0, "asynchronous-minhash-lsh"]], "MinHash LSH Forest": [[0, "minhash-lsh-forest"], [5, "minhash-lsh-forest"]], "MinHash LSH Ensemble": [[0, "minhash-lsh-ensemble"], [4, "minhash-lsh-ensemble"]], "HyperLogLog": [[0, "hyperloglog"], [1, "hyperloglog"]], "HyperLogLog++": [[0, "id3"], [1, "hyperloglog-plusplus"]], "datasketch: Big Data Looks Small": [[2, "datasketch-big-data-looks-small"]], "Install": [[2, "install"]], "MinHash LSH at scale": [[3, "minhash-lsh-at-scale"]], "Connecting to Existing MinHash LSH": [[3, "connecting-to-existing-minhash-lsh"]], "Asynchronous MinHash LSH at scale": [[3, "asynchronous-minhash-lsh-at-scale"]], "Common Issues with MinHash LSH": [[3, "common-issues-with-minhash-lsh"]], "Containment": [[4, "containment"]], "LSH for Containment": [[4, "lsh-for-containment"]], "Common Issues with LSH Ensemble": [[4, "common-issues-with-lsh-ensemble"]], "Tips for Improving Accuracy": [[5, "tips-for-improving-accuracy"]], "Common Issues with MinHash LSH Forest": [[5, "common-issues-with-minhash-lsh-forest"]], "Use Different Hash Functions": [[6, "use-different-hash-functions"]], "Common Issues with MinHash": [[6, "common-issues-with-minhash"]]}, "indexentries": {"hyperloglog (class in datasketch)": [[0, "datasketch.HyperLogLog"]], "hyperloglogplusplus (class in datasketch)": [[0, "datasketch.HyperLogLogPlusPlus"]], "leanminhash (class in datasketch)": [[0, "datasketch.LeanMinHash"]], "minhash (class in datasketch)": [[0, "datasketch.MinHash"]], "minhashlsh (class in datasketch)": [[0, "datasketch.MinHashLSH"]], "minhashlshensemble (class in datasketch)": [[0, "datasketch.MinHashLSHEnsemble"]], "minhashlshforest (class in datasketch)": [[0, "datasketch.MinHashLSHForest"]], "weightedminhash (class in datasketch)": [[0, "datasketch.WeightedMinHash"]], "weightedminhashgenerator (class in datasketch)": [[0, "datasketch.WeightedMinHashGenerator"]], "__contains__() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.__contains__"]], "__contains__() (datasketch.minhashlshensemble method)": [[0, "datasketch.MinHashLSHEnsemble.__contains__"]], "__contains__() (datasketch.minhashlshforest method)": [[0, "datasketch.MinHashLSHForest.__contains__"]], "__eq__() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.__eq__"]], "__eq__() (datasketch.minhash method)": [[0, "datasketch.MinHash.__eq__"]], "__eq__() (datasketch.weightedminhash method)": [[0, "datasketch.WeightedMinHash.__eq__"]], "__getstate__() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.__getstate__"]], "__getstate__() (datasketch.leanminhash method)": [[0, "datasketch.LeanMinHash.__getstate__"]], "__hash__ (datasketch.hyperloglog attribute)": [[0, "datasketch.HyperLogLog.__hash__"]], "__hash__ (datasketch.minhash attribute)": [[0, "datasketch.MinHash.__hash__"]], "__hash__ (datasketch.weightedminhash attribute)": [[0, "datasketch.WeightedMinHash.__hash__"]], "__hash__() (datasketch.leanminhash method)": [[0, "datasketch.LeanMinHash.__hash__"]], "__init__() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.__init__"]], "__init__() (datasketch.hyperloglogplusplus method)": [[0, "datasketch.HyperLogLogPlusPlus.__init__"]], "__init__() (datasketch.leanminhash method)": [[0, "datasketch.LeanMinHash.__init__"]], "__init__() (datasketch.minhash method)": [[0, "datasketch.MinHash.__init__"]], "__init__() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.__init__"]], "__init__() (datasketch.minhashlshensemble method)": [[0, "datasketch.MinHashLSHEnsemble.__init__"]], "__init__() (datasketch.minhashlshforest method)": [[0, "datasketch.MinHashLSHForest.__init__"]], "__init__() (datasketch.weightedminhash method)": [[0, "datasketch.WeightedMinHash.__init__"]], "__init__() (datasketch.weightedminhashgenerator method)": [[0, "datasketch.WeightedMinHashGenerator.__init__"]], "__len__() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.__len__"]], "__len__() (datasketch.minhash method)": [[0, "datasketch.MinHash.__len__"]], "__len__() (datasketch.weightedminhash method)": [[0, "datasketch.WeightedMinHash.__len__"]], "__weakref__ (datasketch.hyperloglogplusplus attribute)": [[0, "datasketch.HyperLogLogPlusPlus.__weakref__"]], "__weakref__ (datasketch.minhash attribute)": [[0, "datasketch.MinHash.__weakref__"]], "__weakref__ (datasketch.minhashlsh attribute)": [[0, "datasketch.MinHashLSH.__weakref__"]], "__weakref__ (datasketch.minhashlshensemble attribute)": [[0, "datasketch.MinHashLSHEnsemble.__weakref__"]], "__weakref__ (datasketch.minhashlshforest attribute)": [[0, "datasketch.MinHashLSHForest.__weakref__"]], "__weakref__ (datasketch.weightedminhash attribute)": [[0, "datasketch.WeightedMinHash.__weakref__"]], "__weakref__ (datasketch.weightedminhashgenerator attribute)": [[0, "datasketch.WeightedMinHashGenerator.__weakref__"]], "add() (datasketch.minhashlshforest method)": [[0, "datasketch.MinHashLSHForest.add"]], "add_to_query_buffer() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.add_to_query_buffer"]], "bulk() (datasketch.minhash class method)": [[0, "datasketch.MinHash.bulk"]], "bytesize() (datasketch.leanminhash method)": [[0, "datasketch.LeanMinHash.bytesize"]], "clear() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.clear"]], "clear() (datasketch.minhash method)": [[0, "datasketch.MinHash.clear"]], "collect_query_buffer() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.collect_query_buffer"]], "copy() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.copy"]], "copy() (datasketch.leanminhash method)": [[0, "datasketch.LeanMinHash.copy"]], "copy() (datasketch.minhash method)": [[0, "datasketch.MinHash.copy"]], "copy() (datasketch.weightedminhash method)": [[0, "datasketch.WeightedMinHash.copy"]], "count() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.count"]], "count() (datasketch.hyperloglogplusplus method)": [[0, "datasketch.HyperLogLogPlusPlus.count"]], "count() (datasketch.minhash method)": [[0, "datasketch.MinHash.count"]], "deserialize() (datasketch.leanminhash class method)": [[0, "datasketch.LeanMinHash.deserialize"]], "digest() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.digest"]], "digest() (datasketch.minhash method)": [[0, "datasketch.MinHash.digest"]], "digest() (datasketch.weightedminhash method)": [[0, "datasketch.WeightedMinHash.digest"]], "generator() (datasketch.minhash class method)": [[0, "datasketch.MinHash.generator"]], "get_counts() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.get_counts"]], "get_subset_counts() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.get_subset_counts"]], "index() (datasketch.minhashlshensemble method)": [[0, "datasketch.MinHashLSHEnsemble.index"]], "index() (datasketch.minhashlshforest method)": [[0, "datasketch.MinHashLSHForest.index"]], "insert() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.insert"]], "insertion_session() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.insertion_session"]], "is_empty() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.is_empty"]], "is_empty() (datasketch.minhash method)": [[0, "datasketch.MinHash.is_empty"]], "is_empty() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.is_empty"]], "is_empty() (datasketch.minhashlshensemble method)": [[0, "datasketch.MinHashLSHEnsemble.is_empty"]], "is_empty() (datasketch.minhashlshforest method)": [[0, "datasketch.MinHashLSHForest.is_empty"]], "jaccard() (datasketch.minhash method)": [[0, "datasketch.MinHash.jaccard"]], "jaccard() (datasketch.weightedminhash method)": [[0, "datasketch.WeightedMinHash.jaccard"]], "merge() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.merge"]], "merge() (datasketch.minhash method)": [[0, "datasketch.MinHash.merge"]], "minhash() (datasketch.weightedminhashgenerator method)": [[0, "datasketch.WeightedMinHashGenerator.minhash"]], "minhash_many() (datasketch.weightedminhashgenerator method)": [[0, "datasketch.WeightedMinHashGenerator.minhash_many"]], "query() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.query"]], "query() (datasketch.minhashlshensemble method)": [[0, "datasketch.MinHashLSHEnsemble.query"]], "query() (datasketch.minhashlshforest method)": [[0, "datasketch.MinHashLSHForest.query"]], "remove() (datasketch.minhashlsh method)": [[0, "datasketch.MinHashLSH.remove"]], "serialize() (datasketch.leanminhash method)": [[0, "datasketch.LeanMinHash.serialize"]], "union() (datasketch.leanminhash class method)": [[0, "datasketch.LeanMinHash.union"]], "union() (datasketch.minhash class method)": [[0, "datasketch.MinHash.union"]], "update() (datasketch.hyperloglog method)": [[0, "datasketch.HyperLogLog.update"]], "update() (datasketch.leanminhash method)": [[0, "datasketch.LeanMinHash.update"]], "update() (datasketch.minhash method)": [[0, "datasketch.MinHash.update"]], "update_batch() (datasketch.minhash method)": [[0, "datasketch.MinHash.update_batch"]]}})